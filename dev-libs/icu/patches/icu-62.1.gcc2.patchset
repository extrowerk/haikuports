From 62fd52642dfd0e4bbdf1af17c7e0b7f9568ecb55 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@gmail.com>
Date: Sun, 19 Apr 2015 13:35:11 +0200
Subject: [PATCH 1/6] gcc2 fixes for tools, tests, layout.

---
 source/test/intltest/apicoll.cpp   | 15 +++++++++++++++
 source/test/iotest/stream.cpp      |  2 +-
 source/tools/toolutil/udbgutil.cpp |  2 ++
 3 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/source/test/intltest/apicoll.cpp b/source/test/intltest/apicoll.cpp
index b08211a..3df09e3 100644
--- a/source/test/intltest/apicoll.cpp
+++ b/source/test/intltest/apicoll.cpp
@@ -2002,7 +2002,22 @@ class TestCollator  : public Collator
 public:
     virtual Collator* clone(void) const;
 
+#if __GNUC__ == 2
+	EComparisonResult compare (const UnicodeString& s1, const UnicodeString& s2)
+		const {
+		return Collator::compare(s1, s2);
+	}
+	EComparisonResult compare (const UnicodeString& s1, const UnicodeString& s2,
+			int32_t i) const {
+		return Collator::compare(s1, s2, i);
+	}
+	EComparisonResult compare (const UChar* s1, int32_t l1, const UChar* s2,
+		int32_t l2) const {
+		return Collator::compare(s1, l1, s2, l2);
+	}
+#else
     using Collator::compare;
+#endif
 
     virtual UCollationResult compare(const UnicodeString& source, 
                                       const UnicodeString& target,
diff --git a/source/test/iotest/stream.cpp b/source/test/iotest/stream.cpp
index 0ffc623..08803b9 100644
--- a/source/test/iotest/stream.cpp
+++ b/source/test/iotest/stream.cpp
@@ -133,7 +133,7 @@ static void U_CALLCONV TestStream(void)
 #endif
     UnicodeString ustr("string");
 
-    outFormatStream << "1234567890" << setw(10) << left << ustr << " " << "0123456789";
+    outFormatStream << "1234567890" << setw(10) << ios::left << ustr << " " << "0123456789";
 
 #ifdef USE_SSTREAM
     tempStr = outFormatStream.str();
diff --git a/source/tools/toolutil/udbgutil.cpp b/source/tools/toolutil/udbgutil.cpp
index dcc80eb..1bac678 100644
--- a/source/tools/toolutil/udbgutil.cpp
+++ b/source/tools/toolutil/udbgutil.cpp
@@ -617,7 +617,9 @@ U_CAPI char *udbg_knownIssueURLFrom(const char *ticket, char *buf) {
 #include <set>
 #include <map>
 #include <string>
+#if __GNUC__ > 2
 #include <ostream>
+#endif
 #include <iostream>
 
 class KnownIssues {
-- 
2.16.4


From 0a67a931e4f0f502d36c743aefbb005776df96f7 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@gmail.com>
Date: Sun, 19 Apr 2015 13:35:47 +0200
Subject: [PATCH 2/6] gcc2 fixes for sources/i18n

---
 source/i18n/alphaindex.cpp                 |  8 +++----
 source/i18n/currfmt.h                      |  2 ++
 source/i18n/msgfmt.cpp                     |  1 +
 source/i18n/reldtfmt.h                     |  2 ++
 source/i18n/sortkey.cpp                    |  2 +-
 source/i18n/unicode/choicfmt.h             | 21 +++++++++++++++++
 source/i18n/unicode/compactdecimalformat.h |  8 ++++++-
 source/i18n/unicode/datefmt.h              |  6 +++++
 source/i18n/unicode/decimfmt.h             | 38 +++++++++++++++++++++++++++++-
 source/i18n/unicode/dtitvfmt.h             |  2 ++
 source/i18n/unicode/measfmt.h              | 17 +++++++++++++
 source/i18n/unicode/msgfmt.h               | 13 ++++++++++
 source/i18n/unicode/numfmt.h               |  8 +++++++
 source/i18n/unicode/plurfmt.h              |  7 ++++++
 source/i18n/unicode/rbnf.h                 | 24 ++++++++++++++++++-
 source/i18n/unicode/selfmt.h               |  4 +++-
 source/i18n/unicode/smpdtfmt.h             | 29 +++++++++++++++++++++++
 source/i18n/unicode/tblcoll.h              | 15 ++++++++++++
 source/i18n/unicode/tzfmt.h                |  7 ++++++
 19 files changed, 205 insertions(+), 9 deletions(-)

diff --git a/source/i18n/alphaindex.cpp b/source/i18n/alphaindex.cpp
index d36a2cc..6a43528 100644
--- a/source/i18n/alphaindex.cpp
+++ b/source/i18n/alphaindex.cpp
@@ -949,8 +949,8 @@ static int32_t U_CALLCONV
 collatorComparator(const void *context, const void *left, const void *right) {
     const UElement *leftElement = static_cast<const UElement *>(left);
     const UElement *rightElement = static_cast<const UElement *>(right);
-    const UnicodeString *leftString  = static_cast<const UnicodeString *>(leftElement->pointer);
-    const UnicodeString *rightString = static_cast<const UnicodeString *>(rightElement->pointer);
+    const UnicodeString *leftString  = (const UnicodeString *)(leftElement->pointer);
+    const UnicodeString *rightString = (const UnicodeString *)(rightElement->pointer);
 
     if (leftString == rightString) {
         // Catches case where both are NULL
@@ -974,8 +974,8 @@ static int32_t U_CALLCONV
 recordCompareFn(const void *context, const void *left, const void *right) {
     const UElement *leftElement = static_cast<const UElement *>(left);
     const UElement *rightElement = static_cast<const UElement *>(right);
-    const AlphabeticIndex::Record *leftRec  = static_cast<const AlphabeticIndex::Record *>(leftElement->pointer);
-    const AlphabeticIndex::Record *rightRec = static_cast<const AlphabeticIndex::Record *>(rightElement->pointer);
+    const AlphabeticIndex::Record *leftRec  = (const AlphabeticIndex::Record *)(leftElement->pointer);
+    const AlphabeticIndex::Record *rightRec = (const AlphabeticIndex::Record *)(rightElement->pointer);
     const Collator *col = static_cast<const Collator *>(context);
     UErrorCode errorCode = U_ZERO_ERROR;
     return col->compare(leftRec->name_, rightRec->name_, errorCode);
diff --git a/source/i18n/currfmt.h b/source/i18n/currfmt.h
index 97d44cb..99a5402 100644
--- a/source/i18n/currfmt.h
+++ b/source/i18n/currfmt.h
@@ -60,7 +60,9 @@ class CurrencyFormat : public MeasureFormat {
     virtual Format* clone() const;
 
 
+#if __GNUC__ > 2
     using MeasureFormat::format;
+#endif
 
     /**
      * Override Format API.
diff --git a/source/i18n/msgfmt.cpp b/source/i18n/msgfmt.cpp
index 8b3807e..9ce6046 100644
--- a/source/i18n/msgfmt.cpp
+++ b/source/i18n/msgfmt.cpp
@@ -1488,6 +1488,7 @@ MessageFormat::parse(int32_t msgStart,
         prevIndex=msgPattern.getPart(argLimit).getLimit();
         i=argLimit;
     }
+	return NULL;
 }
 // -------------------------------------
 // Parses the source pattern and returns the Formattable objects array,
diff --git a/source/i18n/reldtfmt.h b/source/i18n/reldtfmt.h
index c3b3044..45d67aa 100644
--- a/source/i18n/reldtfmt.h
+++ b/source/i18n/reldtfmt.h
@@ -83,7 +83,9 @@ public:
     virtual UBool operator==(const Format& other) const;
 
 
+#if __GNUC__ > 2
     using DateFormat::format;
+#endif
 
     /**
      * Format a date or time, which is the standard millis since 24:00 GMT, Jan
diff --git a/source/i18n/sortkey.cpp b/source/i18n/sortkey.cpp
index 1228948..8028ce4 100644
--- a/source/i18n/sortkey.cpp
+++ b/source/i18n/sortkey.cpp
@@ -174,7 +174,7 @@ Collator::EComparisonResult
 CollationKey::compareTo(const CollationKey& target) const
 {
     UErrorCode errorCode = U_ZERO_ERROR;
-    return static_cast<Collator::EComparisonResult>(compareTo(target, errorCode));
+    return (Collator::EComparisonResult)(compareTo(target, errorCode));
 }
 
 // Bitwise comparison for the collation keys.
diff --git a/source/i18n/unicode/choicfmt.h b/source/i18n/unicode/choicfmt.h
index c9f0f11..478ee92 100644
--- a/source/i18n/unicode/choicfmt.h
+++ b/source/i18n/unicode/choicfmt.h
@@ -357,7 +357,22 @@ public:
     virtual const UnicodeString* getFormats(int32_t& count) const;
 
 
+#if __GNUC__ == 2
+    virtual UnicodeString& format (double number,
+                                   icu::UnicodeString& appendTo) const {
+        return NumberFormat::format(number, appendTo);
+    }
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPosition& p, UErrorCode& e) const {
+		return NumberFormat::format(f, s, p, e);
+	}
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		UErrorCode& e) const {
+		return NumberFormat::format(f, s, e);
+	}
+#else
     using NumberFormat::format;
+#endif
 
     /**
      * Formats a double number using this object's choices.
@@ -423,7 +438,13 @@ public:
                                   FieldPosition& pos,
                                   UErrorCode& success) const;
 
+#if __GNUC__ == 2
+	void parse(UnicodeString& s, Formattable& f, UErrorCode& e) const {
+		NumberFormat::parse(s, f, e);
+	}
+#else
    using NumberFormat::parse;
+#endif
 
    /**
     * Looks for the longest match of any message string on the input text and,
diff --git a/source/i18n/unicode/compactdecimalformat.h b/source/i18n/unicode/compactdecimalformat.h
index 7dc92f6..d3447cf 100644
--- a/source/i18n/unicode/compactdecimalformat.h
+++ b/source/i18n/unicode/compactdecimalformat.h
@@ -103,7 +103,13 @@ public:
      */
     Format* clone() const U_OVERRIDE;
 
-    using DecimalFormat::format;
+#if __GNUC__ == 2
+	UnicodeString& format(double n, UnicodeString& s) const {
+		return DecimalFormat::format(n, s);
+	}
+#else
+     using DecimalFormat::format;
+#endif
 
     /**
      * CompactDecimalFormat does not support parsing. This implementation
diff --git a/source/i18n/unicode/datefmt.h b/source/i18n/unicode/datefmt.h
index f8bcf54..5b3323e 100644
--- a/source/i18n/unicode/datefmt.h
+++ b/source/i18n/unicode/datefmt.h
@@ -224,7 +224,13 @@ public:
     virtual UBool operator==(const Format&) const;
 
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e) const {
+		return Format::format(f, s, e);
+	}
+#else
     using Format::format;
+#endif
 
     /**
      * Format an object to produce a string. This method handles Formattable
diff --git a/source/i18n/unicode/decimfmt.h b/source/i18n/unicode/decimfmt.h
index 3747f51..41b3220 100644
--- a/source/i18n/unicode/decimfmt.h
+++ b/source/i18n/unicode/decimfmt.h
@@ -916,7 +916,35 @@ class U_I18N_API DecimalFormat : public NumberFormat {
     UBool operator==(const Format& other) const U_OVERRIDE;
 
 
-    using NumberFormat::format;
+#if __GNUC__ == 2
+    virtual UnicodeString& format (double number,
+                                   icu::UnicodeString& appendTo) const {
+        return NumberFormat::format(number, appendTo);
+    }
+
+    virtual UnicodeString& format (double number,
+                                   icu::UnicodeString& appendTo,
+                                   UErrorCode& status) const {
+        return NumberFormat::format(number, appendTo, status);
+    }
+
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+			FieldPositionIterator* i, UErrorCode& e) const {
+		return NumberFormat::format(f, s, i, e);
+	}
+	
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+			FieldPosition& p, UErrorCode& e) const {
+		return NumberFormat::format(f, s, p, e);
+	}
+
+	UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e)
+		const {
+		return NumberFormat::format(f, s, e);
+	}
+#else
+     using NumberFormat::format;
+#endif
 
     /**
      * Format a double or long number using base-10 representation.
@@ -1113,7 +1141,15 @@ class U_I18N_API DecimalFormat : public NumberFormat {
 
 #endif // U_HIDE_INTERNAL_API
 
+#if __GNUC__ == 2
+    void parse(const UnicodeString& text,
+                       Formattable& result,
+                       UErrorCode& status) const {
+        NumberFormat::parse(text, result, status);
+    }
+#else
     using NumberFormat::parse;
+#endif
 
     /**
      * Parse the given string using this object's choices. The method
diff --git a/source/i18n/unicode/dtitvfmt.h b/source/i18n/unicode/dtitvfmt.h
index 5eaa559..6b3fd93 100644
--- a/source/i18n/unicode/dtitvfmt.h
+++ b/source/i18n/unicode/dtitvfmt.h
@@ -377,7 +377,9 @@ public:
     UBool operator!=(const Format& other) const;
 
 
+#if __GNUC__ > 2
     using Format::format;
+#endif
 
     /**
      * Format an object to produce a string. This method handles Formattable
diff --git a/source/i18n/unicode/measfmt.h b/source/i18n/unicode/measfmt.h
index 00f2d47..33d0af1 100644
--- a/source/i18n/unicode/measfmt.h
+++ b/source/i18n/unicode/measfmt.h
@@ -97,8 +97,25 @@ class DateFormat;
  */
 class U_I18N_API MeasureFormat : public Format {
  public:
+#if __GNUC__ == 2
+	void parseObject (const UnicodeString& s, Formattable& f, UErrorCode& e) 
+		const {
+		Format::parseObject(s, f, e);
+	}
+
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPositionIterator* i, UErrorCode& e) const {
+		return Format::format(f, s, i, e);
+	}
+
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		UErrorCode& e) const {
+		return Format::format(f, s, e);
+	}
+#else
     using Format::parseObject;
     using Format::format;
+#endif
 
     /**
      * Constructor.
diff --git a/source/i18n/unicode/msgfmt.h b/source/i18n/unicode/msgfmt.h
index fef8010..aac64c1 100644
--- a/source/i18n/unicode/msgfmt.h
+++ b/source/i18n/unicode/msgfmt.h
@@ -624,7 +624,17 @@ public:
     virtual const Format** getFormats(int32_t& count) const;
 
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPositionIterator* i, UErrorCode& e) const {
+		return Format::format(f, s, i, e);
+	}
+	UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e) {
+		return Format::format(f, s, e);
+	}
+#else
     using Format::format;
+#endif
 
     /**
      * Formats the given array of arguments into a user-readable string.
@@ -886,6 +896,9 @@ private:
         PluralRules* rules;
         UPluralType type;
     };
+#if __GNUC__ == 2
+	friend class PluralSelectorProvider;
+#endif
 
     /**
      * A MessageFormat formats an array of arguments.  Each argument
diff --git a/source/i18n/unicode/numfmt.h b/source/i18n/unicode/numfmt.h
index 80ce0c0..e3cf162 100644
--- a/source/i18n/unicode/numfmt.h
+++ b/source/i18n/unicode/numfmt.h
@@ -264,7 +264,15 @@ public:
     virtual UBool operator==(const Format& other) const;
 
 
+#if __GNUC__ == 2
+    virtual UnicodeString& format (const Formattable& obj,
+                                   UnicodeString& appendTo,
+                                   UErrorCode & status) const {
+        return Format::format(obj, appendTo, status);
+    }
+#else
     using Format::format;
+#endif
 
     /**
      * Format an object to produce a string.  This method handles
diff --git a/source/i18n/unicode/plurfmt.h b/source/i18n/unicode/plurfmt.h
index fd537c2..4ad87c9 100644
--- a/source/i18n/unicode/plurfmt.h
+++ b/source/i18n/unicode/plurfmt.h
@@ -315,7 +315,14 @@ public:
     void applyPattern(const UnicodeString& pattern, UErrorCode& status);
 
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPositionIterator* i, UErrorCode& e) const {
+		return Format::format(f, s, i, e);
+	}
+#else
     using Format::format;
+#endif
 
     /**
      * Formats a plural message for a given number.
diff --git a/source/i18n/unicode/rbnf.h b/source/i18n/unicode/rbnf.h
index ab5a019..24d2b37 100644
--- a/source/i18n/unicode/rbnf.h
+++ b/source/i18n/unicode/rbnf.h
@@ -780,7 +780,23 @@ public:
                           const Locale& locale = Locale::getDefault());
 
 
+#if __GNUC__ == 2
+  UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e)
+	const {
+		return NumberFormat::format(f, s, e);
+  }
+
+  UnicodeString& format(double n, UnicodeString& s) const {
+	return NumberFormat::format(n, s);
+  }
+
+  UnicodeString& format(int64_t n, UnicodeString& s, FieldPosition& p,
+	UErrorCode& e) const {
+	return NumberFormat::format(n, s, p, e);
+  }
+#else
   using NumberFormat::format;
+#endif
 
   /**
    * Formats the specified 32-bit number using the default ruleset.
@@ -912,7 +928,13 @@ protected:
                                   UErrorCode& status) const;
 public:
 
-  using NumberFormat::parse;
+#if __GNUC__ == 2
+  void parse(const UnicodeString& s, Formattable& f, UErrorCode& e) const {
+	return NumberFormat::parse(s, f, e);
+  }
+#else
+   using NumberFormat::parse;
+#endif
 
   /**
    * Parses the specfied string, beginning at the specified position, according
diff --git a/source/i18n/unicode/selfmt.h b/source/i18n/unicode/selfmt.h
index 08e9d44..5c3f53e 100755
--- a/source/i18n/unicode/selfmt.h
+++ b/source/i18n/unicode/selfmt.h
@@ -221,7 +221,9 @@ public:
     void applyPattern(const UnicodeString& pattern, UErrorCode& status);
 
 
+#if __GNUC__ > 2
     using Format::format;
+#endif
 
     /**
      * Selects the phrase for  the given keyword
@@ -342,9 +344,9 @@ public:
      */
     virtual UClassID getDynamicClassID() const;
 
-private:
     friend class MessageFormat;
 
+private:
     SelectFormat();   // default constructor not implemented.
 
     /**
diff --git a/source/i18n/unicode/smpdtfmt.h b/source/i18n/unicode/smpdtfmt.h
index 305412b..09943ce 100644
--- a/source/i18n/unicode/smpdtfmt.h
+++ b/source/i18n/unicode/smpdtfmt.h
@@ -876,7 +876,27 @@ public:
     virtual UBool operator==(const Format& other) const;
 
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPositionIterator* i, UErrorCode& e) const {
+		return DateFormat::format(f, s, i, e);
+	}
+	UnicodeString& format(const Formattable& f, UnicodeString& s, FieldPosition& p,
+		UErrorCode& e) const {
+		return DateFormat::format(f, s, p, e);
+	}
+	UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e) const {
+		return Format::format(f, s, e);
+	}
+	UnicodeString& format(const UDate& d, UnicodeString& s, FieldPosition& f) const {
+		return DateFormat::format(d, s, f);
+	}
+	UnicodeString& format(const UDate& d, UnicodeString& s) const {
+		return DateFormat::format(d, s);
+	}
+#else
     using DateFormat::format;
+#endif
 
     /**
      * Format a date or time, which is the standard millis since 24:00 GMT, Jan
@@ -921,7 +941,16 @@ public:
                                     FieldPositionIterator* posIter,
                                     UErrorCode& status) const;
 
+#if __GNUC__ == 2
+	UDate parse(const UnicodeString& s, UErrorCode& e) const {
+		return DateFormat::parse(s, e);
+	}
+	UDate parse (const UnicodeString& s, ParsePosition& p) const {
+		return DateFormat::parse(s, p);
+	}
+#else
     using DateFormat::parse;
+#endif
 
     /**
      * Parse a date/time string beginning at the given parse position. For
diff --git a/source/i18n/unicode/tblcoll.h b/source/i18n/unicode/tblcoll.h
index 24ba213..be0fa6a 100644
--- a/source/i18n/unicode/tblcoll.h
+++ b/source/i18n/unicode/tblcoll.h
@@ -256,7 +256,22 @@ public:
                                          const CharacterIterator& source) const;
 
     // Make deprecated versions of Collator::compare() visible.
+#if __GNUC__ == 2
+	EComparisonResult compare(const UChar* source, int sourceLength,
+		const UChar* target, int targetLength) const {
+		return Collator::compare(source, sourceLength, target, targetLength);
+	}
+	EComparisonResult compare(const UnicodeString& s1, const UnicodeString& s2,
+		int i) const {
+		return Collator::compare(s1, s2, i);
+	}
+	EComparisonResult compare(const UnicodeString& s1, const UnicodeString& s2)
+		const {
+		return Collator::compare(s1, s2);
+	}
+#else
     using Collator::compare;
+#endif
 
     /**
     * The comparison function compares the character data stored in two
diff --git a/source/i18n/unicode/tzfmt.h b/source/i18n/unicode/tzfmt.h
index 724ff4d..3d75f76 100644
--- a/source/i18n/unicode/tzfmt.h
+++ b/source/i18n/unicode/tzfmt.h
@@ -519,7 +519,14 @@ public:
      */
     UnicodeString& formatOffsetShortLocalizedGMT(int32_t offset, UnicodeString& result, UErrorCode& status) const;
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& data, UnicodeString& string,
+		FieldPositionIterator* iterator, UErrorCode& error) const {
+		return Format::format(data, string, iterator, error);
+	}
+#else
     using Format::format;
+#endif
 
     /**
      * Returns the display name of the time zone at the given date for the style.
-- 
2.16.4


From 140f1a145e008b8a0b10d0e353063069ed2e363a Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@gmail.com>
Date: Sun, 19 Apr 2015 13:36:37 +0200
Subject: [PATCH 3/6] gcc2 fixes in source/common

---
 source/common/unicode/bytestrie.h         | 3 +++
 source/common/unicode/bytestriebuilder.h  | 3 +++
 source/common/unicode/platform.h          | 2 +-
 source/common/unicode/stringtriebuilder.h | 9 +++++++++
 source/common/unicode/ucharstrie.h        | 3 +++
 source/common/unicode/ucharstriebuilder.h | 3 +++
 6 files changed, 22 insertions(+), 1 deletion(-)

diff --git a/source/common/unicode/bytestrie.h b/source/common/unicode/bytestrie.h
index c57b8cc..ed6865a 100644
--- a/source/common/unicode/bytestrie.h
+++ b/source/common/unicode/bytestrie.h
@@ -339,6 +339,9 @@ public:
         // but the code looks more confusing that way.)
         UVector32 *stack_;
     };
+#if __GNUC__ == 2
+	friend class Iterator;
+#endif
 
 private:
     friend class BytesTrieBuilder;
diff --git a/source/common/unicode/bytestriebuilder.h b/source/common/unicode/bytestriebuilder.h
index 2a1f28e..368a4b3 100644
--- a/source/common/unicode/bytestriebuilder.h
+++ b/source/common/unicode/bytestriebuilder.h
@@ -153,6 +153,9 @@ private:
     private:
         const char *s;
     };
+#if __GNUC__ == 2
+	friend class BTLinearMatchNode;
+#endif
     
     virtual Node *createLinearMatchNode(int32_t i, int32_t byteIndex, int32_t length,
                                         Node *nextNode) const;
diff --git a/source/common/unicode/platform.h b/source/common/unicode/platform.h
index 7a3a87a..3cfb16b 100644
--- a/source/common/unicode/platform.h
+++ b/source/common/unicode/platform.h
@@ -782,7 +782,7 @@ namespace std {
     /* Use the predefined value. */
 #elif defined(U_STATIC_IMPLEMENTATION)
 #   define U_EXPORT
-#elif defined(__GNUC__)
+#elif defined(__GNUC__) && __GNUC__ > 2
 #   define U_EXPORT __attribute__((visibility("default")))
 #elif (defined(__SUNPRO_CC) && __SUNPRO_CC >= 0x550) \
    || (defined(__SUNPRO_C) && __SUNPRO_C >= 0x550) 
diff --git a/source/common/unicode/stringtriebuilder.h b/source/common/unicode/stringtriebuilder.h
index caeae51..6520bb4 100644
--- a/source/common/unicode/stringtriebuilder.h
+++ b/source/common/unicode/stringtriebuilder.h
@@ -391,6 +391,15 @@ protected:
         int32_t length;
         Node *next;  // A branch sub-node.
     };
+#if __GNUC__ >= 2
+	friend class FinalValueNode;
+	friend class ValueNode;
+	friend class IntermediateValueNode;
+	friend class BranchNode;
+	friend class ListBranchNode;
+	friend class SplitBranchNode;
+	friend class BranchHeadNode;
+#endif
 #endif  /* U_HIDE_INTERNAL_API */
 
     /** @internal */
diff --git a/source/common/unicode/ucharstrie.h b/source/common/unicode/ucharstrie.h
index dfc93f6..094a730 100644
--- a/source/common/unicode/ucharstrie.h
+++ b/source/common/unicode/ucharstrie.h
@@ -358,6 +358,9 @@ public:
         // but the code looks more confusing that way.)
         UVector32 *stack_;
     };
+#if __GNUC__ == 2
+	friend class Iterator;
+#endif
 
 private:
     friend class UCharsTrieBuilder;
diff --git a/source/common/unicode/ucharstriebuilder.h b/source/common/unicode/ucharstriebuilder.h
index 2aa4757..058a2aa 100644
--- a/source/common/unicode/ucharstriebuilder.h
+++ b/source/common/unicode/ucharstriebuilder.h
@@ -158,6 +158,9 @@ private:
     private:
         const char16_t *s;
     };
+#if __GNUC__ == 2
+	friend class UCTLinearMatchNode;
+#endif
 
     virtual Node *createLinearMatchNode(int32_t i, int32_t unitIndex, int32_t length,
                                         Node *nextNode) const;
-- 
2.16.4


From 977dcd090b434c1ca15740f30caf8e9d05bbea5a Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@gmail.com>
Date: Mon, 6 Oct 2014 13:28:09 +0200
Subject: [PATCH 4/6] more gcc2 fixes for ICU 54.

---
 source/common/filteredbrk.cpp    | 6 ++++++
 source/common/norm2allmodes.h    | 8 ++++++++
 source/common/putilimp.h         | 2 +-
 source/common/unicode/platform.h | 2 +-
 4 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/source/common/filteredbrk.cpp b/source/common/filteredbrk.cpp
index 20c3aa8..9613c85 100644
--- a/source/common/filteredbrk.cpp
+++ b/source/common/filteredbrk.cpp
@@ -70,7 +70,13 @@ class U_COMMON_API UStringSet : public UVector {
   inline UBool contains(const UnicodeString& s) {
     return contains((void*) &s);
   }
+#if __GNUC__ == 2
+  UBool contains(void* s) {
+       return UVector::contains(s);
+  }
+#else
   using UVector::contains;
+#endif
   /**
    * Return the ith UnicodeString alias
    */
diff --git a/source/common/norm2allmodes.h b/source/common/norm2allmodes.h
index 682ece2..2c8cf85 100644
--- a/source/common/norm2allmodes.h
+++ b/source/common/norm2allmodes.h
@@ -197,7 +197,9 @@ private:
               ReorderingBuffer &buffer, UErrorCode &errorCode) const {
         impl.decompose(src, limit, &buffer, errorCode);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
+#endif
     virtual void
     normalizeAndAppend(const UChar *src, const UChar *limit, UBool doNormalize,
                        UnicodeString &safeMiddle,
@@ -208,7 +210,9 @@ private:
     spanQuickCheckYes(const UChar *src, const UChar *limit, UErrorCode &errorCode) const {
         return impl.decompose(src, limit, NULL, errorCode);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
+#endif
     virtual UNormalizationCheckResult getQuickCheck(UChar32 c) const {
         return impl.isDecompYes(impl.getNorm16(c)) ? UNORM_YES : UNORM_NO;
     }
@@ -324,7 +328,9 @@ private:
               ReorderingBuffer &buffer, UErrorCode &errorCode) const {
         impl.makeFCD(src, limit, &buffer, errorCode);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
+#endif
     virtual void
     normalizeAndAppend(const UChar *src, const UChar *limit, UBool doNormalize,
                        UnicodeString &safeMiddle,
@@ -335,7 +341,9 @@ private:
     spanQuickCheckYes(const UChar *src, const UChar *limit, UErrorCode &errorCode) const {
         return impl.makeFCD(src, limit, NULL, errorCode);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
+#endif
     virtual UBool hasBoundaryBefore(UChar32 c) const { return impl.hasFCDBoundaryBefore(c); }
     virtual UBool hasBoundaryAfter(UChar32 c) const { return impl.hasFCDBoundaryAfter(c); }
     virtual UBool isInert(UChar32 c) const { return impl.isFCDInert(c); }
diff --git a/source/common/putilimp.h b/source/common/putilimp.h
index 8b858df..1ee0a08 100644
--- a/source/common/putilimp.h
+++ b/source/common/putilimp.h
@@ -109,7 +109,7 @@ typedef size_t uintptr_t;
 
 #if defined(U_TIMEZONE) || defined(U_HAVE_TIMEZONE)
     /* Use the predefined value. */
-#elif U_PLATFORM == U_PF_ANDROID
+#elif U_PLATFORM == U_PF_ANDROID || defined(__HAIKU__)
 #   define U_TIMEZONE timezone
 #elif defined(__UCLIBC__)
     // uClibc does not have __timezone or _timezone.
diff --git a/source/common/unicode/platform.h b/source/common/unicode/platform.h
index 3cfb16b..c17ed8e 100644
--- a/source/common/unicode/platform.h
+++ b/source/common/unicode/platform.h
@@ -165,7 +165,7 @@
 #   else
 #       define U_PLATFORM U_PF_DARWIN
 #   endif
-#elif defined(BSD) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__MirBSD__)
+#elif defined(BSD) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__MirBSD__) || defined(__HAIKU__)
 #   if defined(__FreeBSD__)
 #       include <sys/endian.h>
 #   endif
-- 
2.16.4


From 1bea021df8dd7b340b8e9bac1ca4beea40d642cc Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Thu, 26 Mar 2015 18:39:42 +0000
Subject: [PATCH 5/6] gcc2 fixes for tztools.

---
 source/tools/tzcode/private.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/source/tools/tzcode/private.h b/source/tools/tzcode/private.h
index 1a85c88..0ee3329 100644
--- a/source/tools/tzcode/private.h
+++ b/source/tools/tzcode/private.h
@@ -120,7 +120,7 @@
 */
 #ifndef HAVE_STDINT_H
 #define HAVE_STDINT_H \
-	(199901 <= __STDC_VERSION__ || \
+	(defined(__HAIKU__) || 199901 <= __STDC_VERSION__ || \
 	2 < (__GLIBC__ + (0 < __GLIBC_MINOR__)))
 #endif /* !defined HAVE_STDINT_H */
 
-- 
2.16.4


From a04e19e395f20ad567f8467ac0783e25e2b37c11 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Mon, 11 Jan 2016 21:56:11 +0000
Subject: [PATCH 6/6] gcc2 fixes for icu 56.

---
 source/tools/genrb/reslist.cpp |  6 +++---
 source/tools/genrb/reslist.h   | 10 +++++-----
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/source/tools/genrb/reslist.cpp b/source/tools/genrb/reslist.cpp
index 2e04bbc..320d5bb 100644
--- a/source/tools/genrb/reslist.cpp
+++ b/source/tools/genrb/reslist.cpp
@@ -305,14 +305,14 @@ StringBaseResource::~StringBaseResource() {}
 
 static int32_t U_CALLCONV
 string_hash(const UElement key) {
-    const StringResource *res = static_cast<const StringResource *>(key.pointer);
+    const StringResource *res = reinterpret_cast<const StringResource *>(key.pointer);
     return res->fString.hashCode();
 }
 
 static UBool U_CALLCONV
 string_comp(const UElement key1, const UElement key2) {
-    const StringResource *res1 = static_cast<const StringResource *>(key1.pointer);
-    const StringResource *res2 = static_cast<const StringResource *>(key2.pointer);
+    const StringResource *res1 = reinterpret_cast<const StringResource *>(key1.pointer);
+    const StringResource *res2 = reinterpret_cast<const StringResource *>(key2.pointer);
     return res1->fString == res2->fString;
 }
 
diff --git a/source/tools/genrb/reslist.h b/source/tools/genrb/reslist.h
index ee1ecf3..35bd8b4 100644
--- a/source/tools/genrb/reslist.h
+++ b/source/tools/genrb/reslist.h
@@ -67,7 +67,7 @@ typedef struct KeyMapEntry {
 } KeyMapEntry;
 
 /* Resource bundle root table */
-struct SRBRoot {
+typedef struct SRBRoot {
     SRBRoot(const UString *comment, UBool isPoolBundle, UErrorCode &errorCode);
     ~SRBRoot();
 
@@ -115,8 +115,8 @@ public:
   int32_t fPoolStringIndexLimit;
   int32_t fPoolStringIndex16Limit;
   int32_t fLocalStringIndexLimit;
-  SRBRoot *fWritePoolBundle;
-};
+  struct SRBRoot *fWritePoolBundle;
+} SRBRoot;
 
 /* write a java resource file */
 // TODO: C++ify
@@ -219,7 +219,7 @@ struct SResource {
     int32_t  fKey;      /* Index into bundle->fKeys; -1 if no key. */
     int32_t  fKey16;    /* Key16 version of fKey for Table & Table16; -1 if no key or it does not fit. */
     int      line;      /* used internally to report duplicate keys in tables */
-    SResource *fNext;   /* This is for internal chaining while building */
+    struct SResource *fNext;   /* This is for internal chaining while building */
     struct UString fComment;
 };
 
@@ -346,7 +346,7 @@ public:
 
     void writeUTF16v2(int32_t base, icu::UnicodeString &dest);
 
-    StringResource *fSame;  // used for duplicates
+    class StringResource *fSame;  // used for duplicates
     int32_t fSuffixOffset;  // this string is a suffix of fSame at this offset
     int32_t fNumCopies;     // number of equal strings represented by one stringSet element
     int32_t fNumUnitsSaved;  // from not writing duplicates and suffixes
-- 
2.16.4

From e5747c5e89e2a3703daa81b2c085ce2f90639584 Mon Sep 17 00:00:00 2001
From: Jerome Duval <jerome.duval@gmail.com>
Date: Mon, 11 Jul 2016 21:32:25 +0000
Subject: [PATCH] gcc2 fix for i18n 57.1

---
 source/i18n/dayperiodrules.h   | 12 ++++++++++++
 source/i18n/dtptngen.cpp       |  3 ++-
 source/i18n/smpdtfmt.cpp       |  3 ++-
 source/i18n/unicode/dtitvinf.h | 21 ++++++++++++++++++++-
 4 files changed, 36 insertions(+), 3 deletions(-)

diff --git a/source/i18n/dayperiodrules.h b/source/i18n/dayperiodrules.h
index 610c617..fccf9ef 100644
--- a/source/i18n/dayperiodrules.h
+++ b/source/i18n/dayperiodrules.h
@@ -58,17 +58,29 @@ public:
 private:
     DayPeriodRules();
 
+#if __GNUC__ == 2
+public:
+#endif
     // Translates "morning1" to DAYPERIOD_MORNING1, for example.
     static DayPeriod getDayPeriodFromString(const char *type_str);
+#if __GNUC__ == 2
+private:
+#endif
 
     static void U_CALLCONV load(UErrorCode &errorCode);
 
     // Sets period type for all hours in [startHour, limitHour).
     void add(int32_t startHour, int32_t limitHour, DayPeriod period);
 
+#if __GNUC__ == 2
+public:
+#endif
     // Returns TRUE if for all i, DayPeriodForHour[i] has a type other than UNKNOWN.
     // Values of HasNoon and HasMidnight do not affect the return value.
     UBool allHoursAreSet();
+#if __GNUC__ == 2
+private:
+#endif
 
     // Returns the hour that starts dayPeriod. Returns 0 for MIDNIGHT and 12 for NOON.
     int32_t getStartHourForDayPeriod(DayPeriod dayPeriod, UErrorCode &errorCode) const;
diff --git a/source/i18n/dtptngen.cpp b/source/i18n/dtptngen.cpp
index aefd704..a3922a0 100644
--- a/source/i18n/dtptngen.cpp
+++ b/source/i18n/dtptngen.cpp
@@ -1530,7 +1530,8 @@ DateTimePatternGenerator::getBestAppending(int32_t missingFields, int32_t flags,
                 &tempPattern,
                 &appendName
             };
-            SimpleFormatter(appendItemFormats[topField], 2, 3, err).
+            UnicodeString tempus = appendItemFormats[topField];
+            SimpleFormatter(tempus, 2, 3, err).
                     formatAndReplace(values, 3, resultPattern, NULL, 0, err);
             lastMissingFieldMask = distanceInfo->missingFieldMask;
         }
diff --git a/source/i18n/smpdtfmt.cpp b/source/i18n/smpdtfmt.cpp
index b1b9088..a54dee2 100644
--- a/source/i18n/smpdtfmt.cpp
+++ b/source/i18n/smpdtfmt.cpp
@@ -774,7 +774,8 @@ void SimpleDateFormat::construct(EStyle timeStyle,
         }
 
         resStr = ures_getStringByIndex(dateTimePatterns.getAlias(), glueIndex, &resStrLen, &status);
-        SimpleFormatter(UnicodeString(TRUE, resStr, resStrLen), 2, 2, status).
+        UnicodeString tempus3(TRUE, resStr, resStrLen);
+        SimpleFormatter(tempus3, 2, 2, status).
                 format(tempus1, tempus2, fPattern, status);
     }
     // if the pattern includes just time data or just date date, load the appropriate
diff --git a/source/i18n/unicode/dtitvinf.h b/source/i18n/unicode/dtitvinf.h
index 726e34a..1a2409f 100644
--- a/source/i18n/unicode/dtitvinf.h
+++ b/source/i18n/unicode/dtitvinf.h
@@ -327,8 +327,11 @@ public:
      */
     static UClassID U_EXPORT2 getStaticClassID();
 
-
+#if __GNUC__ == 2
+public:
+#else
 private:
+#endif
     /**
      * DateIntervalFormat will need access to
      * getBestSkeleton(), parseSkeleton(), enum IntervalPatternIndex,
@@ -381,6 +384,9 @@ private:
      */
     void initializeData(const Locale& locale, UErrorCode& status);
 
+#if __GNUC__ == 2
+public:
+#endif
 
     /* Set Interval pattern.
      *
@@ -419,6 +425,9 @@ private:
     const UnicodeString* getBestSkeleton(const UnicodeString& skeleton,
                                          int8_t& bestMatchDistanceInfo) const;
 
+#if __GNUC__ == 2
+private:
+#endif
 
     /**
      * Parse skeleton, save each field's width.
@@ -446,6 +455,9 @@ private:
                                          int32_t anotherFieldWidth,
                                          char patternLetter);
 
+#if __GNUC__ == 2
+public:
+#endif
 
     /**
      * Convert calendar field to the interval pattern index in
@@ -463,6 +475,9 @@ private:
     static IntervalPatternIndex U_EXPORT2 calendarFieldToIntervalIndex(
                                                       UCalendarDateFields field,
                                                       UErrorCode& status);
+#if __GNUC__ == 2
+private:
+#endif
 
 
     /**
@@ -499,6 +514,10 @@ private:
     // default order
     UBool fFirstDateInPtnIsLaterDate;
 
+#if __GNUC__ == 2
+public:
+#endif
+
     // HashMap<UnicodeString, UnicodeString[kIPI_MAX_INDEX]>
     // HashMap( skeleton, pattern[largest_different_field] )
     Hashtable* fIntervalPatterns;
-- 
2.16.4

