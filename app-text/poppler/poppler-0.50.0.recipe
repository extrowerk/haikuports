SUMMARY="A PDF rendering library"
DESCRIPTION="Poppler is a PDF rendering library based on the xpdf-3.0 code \
base."
HOMEPAGE="https://poppler.freedesktop.org/"
COPYRIGHT="2002-2008 Albert Astals Cid
	2005 Kristian HÃ¸gsberg
	2001-2002 Derek Noonburg (xpdf)"
LICENSE="GNU GPL v2"
REVISION="1"
DATAVERSION=0.4.7
SOURCE_URI="https://poppler.freedesktop.org/poppler-$portVersion.tar.xz"
SOURCE_URI_2="https://poppler.freedesktop.org/poppler-data-$DATAVERSION.tar.gz"

CHECKSUM_SHA256="c9c93318b789d3933f6e0bad3bc65110280c28eac3f0666284bb9c9a0ab4bc36"
CHECKSUM_SHA256_2="e752b0d88a7aba54574152143e7bf76436a7ef51977c55d6bd9a48dccde3a7de"

SOURCE_DIR="poppler-$portVersion"
SOURCE_DIR_2="poppler-data-$DATAVERSION"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

ARCHITECTURES_data="any"

# On x86_gcc2 we don't want to install the commands in bin/<arch>/, but in bin/.
commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

PROVIDES="
	$portName = $portVersion
	lib:libpoppler$secondaryArchSuffix = 65.0.0
	cmd:pdfdetach$commandSuffix
	cmd:pdfimages$commandSuffix
	cmd:pdfseparate$commandSuffix
	cmd:pdftohtml$commandSuffix
	cmd:pdftops$commandSuffix
	cmd:pdfunite$commandSuffix
	cmd:pdffonts$commandSuffix
	cmd:pdfinfo$commandSuffix
	cmd:pdftocairo$commandSuffix
	cmd:pdftoppm$commandSuffix
	cmd:pdftotext$commandSuffix
	"
REQUIRES="
	haiku$secondaryArchSuffix
	poppler_data
	lib:libcairo$secondaryArchSuffix
	lib:libcurl$secondaryArchSuffix
	lib:libfontconfig$secondaryArchSuffix
	lib:libfreetype$secondaryArchSuffix
	lib:libiconv$secondaryArchSuffix
	lib:libintl$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:liblcms2$secondaryArchSuffix
	#lib:libnss3$secondaryArchSuffix requires updated nss with nss3.pc
	lib:libopenjp2$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libtiff$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	poppler${secondaryArchSuffix}_devel = $portVersion
	devel:libpoppler$secondaryArchSuffix = 65.0.0
	"
REQUIRES_devel="
	haiku{$secondaryArchSuffix}_devel
	poppler$secondaryArchSuffix == $portVersion base
	devel:libcairo$secondaryArchSuffix
	devel:libcurl$secondaryArchSuffix
	devel:libfontconfig$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libiconv$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:liblcms2$secondaryArchSuffix
	#devel:libnss3$secondaryArchSuffix requires nss3.pc
	devel:libopenjp2$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libtiff$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"

# ============= DATA =============
PROVIDES_data="
	poppler_data = $portVersion
	"
REQUIRES_data="
	poppler$secondaryArchSuffix == $portVersion base
	"

# ============= CPP =============
PROVIDES_cpp="
	poppler_cpp$secondaryArchSuffix = $portVersion
	lib:libpoppler_cpp$secondaryArchSuffix = 0.3.0
	"
REQUIRES_cpp="
	haiku$secondaryArchSuffix
	poppler$secondaryArchSuffix == $portVersion base
	"
PROVIDES_cpp_devel="
	poppler_cpp${secondaryArchSuffix}_devel = $portVersion
	devel:libpoppler_cpp$secondaryArchSuffix = 0.3.0
	"
REQUIRES_cpp_devel="
	haiku${secondaryArchSuffix}_devel
	poppler${secondaryArchSuffix}_devel == $portVersion base
	poppler_cpp${secondaryArchSuffix} == $portVersion base
	"

# ============= GLIB =============
PROVIDES_glib="
	poppler_glib$secondaryArchSuffix = $portVersion
	lib:libpoppler_glib$secondaryArchSuffix = 8.8.0
	"
REQUIRES_glib="
	haiku$secondaryArchSuffix
	poppler$secondaryArchSuffix == $portVersion base
	lib:libgio_2.0$secondaryArchSuffix
	lib:libglib_2.0$secondaryArchSuffix
	lib:libgobject_2.0$secondaryArchSuffix
	"
PROVIDES_glib_devel="
	poppler_glib${secondaryArchSuffix}_devel = $portVersion
	devel:libpoppler_glib$secondaryArchSuffix = 8.8.0
	"
REQUIRES_glib_devel="
	haiku${secondaryArchSuffix}_devel
	poppler${secondaryArchSuffix}_devel == $portVersion base
	poppler_glib${secondaryArchSuffix}_devel == $portVersion base
	devel:libgio_2.0$secondaryArchSuffix
	devel:libglib_2.0$secondaryArchSuffix
	devel:libgobject_2.0$secondaryArchSuffix
	"

# ============= QT5 =============
PROVIDES_qt5="
	poppler_qt5$secondaryArchSuffix = $portVersion
	lib:libpoppler_qt5$secondaryArchSuffix = 1.7.0
	"
REQUIRES_qt5="
	haiku$secondaryArchSuffix
	poppler$secondaryArchSuffix == $portVersion base
	qt5${secondaryArchSuffix}
	"
PROVIDES_qt5_devel="
	poppler_qt5${secondaryArchSuffix}_devel = $portVersion
	devel:libpoppler_qt5$secondaryArchSuffix = 1.7.0
	"
REQUIRES_qt5_devel="
	haiku${secondaryArchSuffix}_devel
	poppler${secondaryArchSuffix}_devel == $portVersion base
	poppler_qt5${secondaryArchSuffix}_devel == $portVersion base
	qt5${secondaryArchSuffix}_devel
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	qt5${secondaryArchSuffix}_devel
	devel:libcairo$secondaryArchSuffix
	devel:libcurl$secondaryArchSuffix
	devel:libfontconfig$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libgio_2.0$secondaryArchSuffix
	devel:libglib_2.0$secondaryArchSuffix
	devel:libgobject_2.0$secondaryArchSuffix
	devel:libiconv$secondaryArchSuffix
	devel:libintl$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:liblcms2$secondaryArchSuffix
	#devel:libnss3$secondaryArchSuffix requires nss3.pc
	devel:libopenjp2$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libtiff$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:automake
	cmd:gawk
	cmd:grep
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:libtoolize$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	cmd:sed
	"

BUILD()
{
	export CFLAGS="-D_BSD_SOURCE"
	export CXXFLAGS="-D_BSD_SOURCE"
	export LDFLAGS="-lnetwork -lbsd"

	libtoolize --force --copy --install
	aclocal -I m4
	autoconf
	automake --add-missing
	runConfigure --omit-dirs "binDir sbinDir docDir" ./configure \
		--bindir=$commandBinDir \
		--sbindir=$commandBinDir \
		--docdir=$docDir \
		--enable-xpdf-headers \
		--enable-build-type=release \
		--enable-libcurl \
		--enable-cmyk

	make $jobArgs
}

INSTALL()
{
	make install

	rm -rf $libDir/*.la

	# defining docDir doesn't helps too much
	popplerdocdir=$dataDir/gtk-doc/html/poppler
	mkdir -p $docDir
	cp -R $popplerdocdir/* $docDir/
	rm -rf $dataDir

	prepareInstalledDevelLibs libpoppler \
		libpoppler-cpp \
		libpoppler-glib \
		libpoppler-qt5

	fixPkgconfig

# ============= DATA =============

	cd $sourceDir2
	make datadir=$dataDir install

	packageEntries data \
		$dataDir/poppler

# ============= CPP =============

	packageEntries cpp \
		$libDir/*cpp*

	packageEntries cpp_devel \
		$developLibDir/*cpp* \
		$developLibDir/pkgconfig/*cpp* \
		$includeDir/$portName/*cpp*

	rm -rf $libDir/*cpp*
	rm -rf $developLibDir/*cpp*
	rm -rf $developLibDir/pkgconfig/*cpp*
	rm -rf $includeDir/$portName/*cpp*

# ============= GLIB =============

	packageEntries glib \
		$libDir/*glib*
		
	packageEntries glib_devel \
		$developLibDir/*glib* \
		$developLibDir/pkgconfig/*glib* \
		$includeDir/$portName/*glib*

	rm -rf $libDir/*glib*
	rm -rf $developLibDir/*glib*
	rm -rf $developLibDir/pkgconfig/*glib*
	rm -rf $includeDir/$portName/*glib*

# ============= QT5 =============

	packageEntries qt5 \
		$libDir/*qt5*
		
	packageEntries qt5_devel \
		$developLibDir/*qt5* \
		$developLibDir/pkgconfig/*qt5* \
		$includeDir/$portName/*qt5*

	rm -rf $libDir/*qt5*
	rm -rf $developLibDir/*qt5*
	rm -rf $developLibDir/pkgconfig/*qt5*
	rm -rf $includeDir/$portName/*qt5*

# ============= DEVEL =============

	packageEntries devel \
		$developDir
}

TEST()
{
	make check
}
