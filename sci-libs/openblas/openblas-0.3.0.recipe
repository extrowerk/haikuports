SUMMARY="An optimized BLAS library"
DESCRIPTION="OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD \
version."
HOMEPAGE="http://www.openblas.net/"
COPYRIGHT="2011-2018 The OpenBLAS Project"
LICENSE="BSD (3-clause)"
REVISION="1"
SOURCE_URI="http://github.com/xianyi/OpenBLAS/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256="cf51543709abe364d8ecfb5c09a2b533d2b725ea1a66f203509b21a8e9d8f1a1"
SOURCE_FILENAME="OpenBLAS-$portVersion.tar.gz"
SOURCE_DIR="OpenBLAS-$portVersion"
PATCHES="openblas-$portVersion.patchset"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	openblas$secondaryArchSuffix = $portVersion
	lib:libopenblas$secondaryArchSuffix = $portVersion compat >= 0
	lib:libopenblasp_r$portVersion.dev$secondaryArchSuffix = $portVersion compat >= 0
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libgfortran$secondaryArchSuffix
	lib:libgomp$secondaryArchSuffix
	"

PROVIDES_devel="
	openblas${secondaryArchSuffix}_devel = $portVersion
	devel:libopenblas$secondaryArchSuffix = $portVersion compat >= 0
	devel:libopenblasp_r$portVersion.dev$secondaryArchSuffix = $portVersion compat >= 0
	"
REQUIRES_devel="
	openblas$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	"
BUILD_PREREQUIRES="
	cmd:awk
	cmd:gfortran$secondaryArchSuffix
	cmd:g++$secondaryArchSuffix
	cmd:make
	cmd:perl
	cmd:pkg_config$secondaryArchSuffix
	"

#defineDebugInfoPackage openblas$secondaryArchSuffix \
#	"$libDir"/libopenblas.so.0 \
#	"$libDir"/libopenblasp-r$portVersion.so

BUILD()
{
	# DYNAMIC_ARCH is x86 only
	# PPC & others should specify TARGET=
	case "$effectiveTargetArchitecture" in
		x86) target=NORTHWOOD;;
		x86_64) target=PRESCOTT;;
		*) target=;;
	esac

	# https://github.com/haikuports/haikuports/issues/2651 workaround
	WORKAROUND="-lgcc -lgcc_s"

	make MAKE_NB_JOBS=${jobArgs#-j} NO_LAPACKE=1 NO_AFFINITY=1 NO_WARMUP=1 \
		NUM_THREADS=64 DYNAMIC_ARCH=1 USE_OPENMP=1 ${target:+TARGET=$target} \
		CEXTRALIB="$WORKAROUND" EXTRALIB="$WORKAROUND" FEXTRALIB="$WORKAROUND" \
		LDFLAGS="$WORKAROUND"
}

INSTALL()
{
	make install PREFIX=$prefix \
		 OPENBLAS_LIBRARY_DIR=$libDir \
		 OPENBLAS_INCLUDE_DIR=$includeDir

	prepareInstalledDevelLibs libopenblas libopenblasp-r$portVersion.dev

	fixPkgconfig

	cp -P $developLibDir/libopenblas.so.0 $libDir

	packageEntries devel \
		$developDir \
		$libDir/cmake
}

TEST()
{
	make tests
}
