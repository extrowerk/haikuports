SUMMARY="A Computational Geometry Algorithms Library"
DESCRIPTION="CGAL is a software project that provides easy access to efficient\
 and reliable geometric algorithms in the form of a C++ library. CGAL is used \
in various areas needing geometric computation, such as geographic information\
 systems, computer aided design, molecular biology, medical imaging, computer\
 graphics, and robotics.

The library offers data structures and algorithms like triangulations, Voronoi\
 diagrams, Boolean operations on polygons and polyhedra, point set processing,\
 arrangements of curves, surface and volume mesh generation, geometry \
processing, alpha shapes, convex hull algorithms, shape analysis, AABB and KD \
trees..."
HOMEPAGE="http://www.cgal.org/"
COPYRIGHT="2005 Stanford University (USA)
	2008,2011 GeometryFactory (France)
	1999-2004 Max-Planck-Institute Saarbruecken (Germany)
	1995-2004 Exact Computation Project
	1997-2004, 2005-2008 ASCLEPIOS Project, INRIA Sophia-Antipolis (France)
	1997-2004 Utrecht University (The Netherlands)
	1997-2004 ETH Zurich (Switzerland)
	1997-2004 Tel-Aviv University (Israel)"
LICENSE="GNU GPL v3
	GNU LGPL v3"
REVISION="1"
SOURCE_URI="https://github.com/CGAL/cgal/releases/download/releases%2FCGAL-$portVersion/CGAL-$portVersion.tar.xz"
CHECKSUM_SHA256="5cc666e9813cb6515c1b4d14a167160be24d60c43c97fef8970dd3798a4c66a8"
SOURCE_DIR="CGAL-$portVersion"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="?x86"

if [ "$targetArchitecture" != x86_gcc2 ]; then
	commandSuffix=$secondaryArchSuffix
	commandBinDir=$binDir
else
	commandSuffix=
	commandBinDir=$prefix/bin
fi

PROVIDES="
	cgal$secondaryArchSuffix = $portVersion
	cmd:cgal_create_cmakelists
	cmd:cgal_create_cmake_script
	cmd:cgal_make_macosx_app
	lib:libCGAL$secondaryArchSuffix = 13.0.0 compat >= 13
	lib:libCGAL_Core$secondaryArchSuffix = 13.0.0 compat >= 13
	lib:libCGAL_ImageIO$secondaryArchSuffix = 13.0.0 compat >= 13
	lib:libCGAL_Qt5$secondaryArchSuffix = 13.0.0 compat >= 13
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libboost_atomic$secondaryArchSuffix
	lib:libboost_chrono$secondaryArchSuffix
	lib:libboost_date_time$secondaryArchSuffix
	lib:libboost_system$secondaryArchSuffix
	lib:libboost_thread$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libgmp$secondaryArchSuffix
	lib:libmpfr$secondaryArchSuffix
	lib:libQt5Core$secondaryArchSuffix
	lib:libQt5Gui$secondaryArchSuffix
	lib:libQt5OpenGL$secondaryArchSuffix
	lib:libQt5Svg$secondaryArchSuffix
	lib:libQt5Widgets$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	cgal${secondaryArchSuffix}_devel = $portVersion
	devel:libcgal$secondaryArchSuffix = 13.0.0 compat >= 13
	devel:libCGAL_Core$secondaryArchSuffix = 13.0.0 compat >= 13
	devel:libCGAL_ImageIO$secondaryArchSuffix = 13.0.0 compat >= 13
	devel:libCGAL_Qt5$secondaryArchSuffix = 13.0.0 compat >= 13
	"
REQUIRES_devel="
	cgal$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:eigen$secondaryArchSuffix
	devel:libboost_atomic$secondaryArchSuffix
	devel:libboost_chrono$secondaryArchSuffix
	devel:libboost_date_time$secondaryArchSuffix
	devel:libboost_system$secondaryArchSuffix
	devel:libboost_thread$secondaryArchSuffix
	devel:libGL$secondaryArchSuffix
	devel:libgmp$secondaryArchSuffix
	devel:libmpfr$secondaryArchSuffix
	devel:libQt5Core$secondaryArchSuffix
	devel:libQt5Gui$secondaryArchSuffix
	devel:libQt5OpenGL$secondaryArchSuffix
	devel:libQt5Svg$secondaryArchSuffix
	devel:libQt5Widgets$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:make
	cmd:gcc$secondaryArchSuffix
	cmd:pkg_config$secondaryArchSuffix
	"

BUILD()
{
	mkdir -p build && cd build
	cmake .. -DCMAKE_INSTALL_PREFIX=$prefix \
		-DCMAKE_BUILD_TYPE=Release \
		-DWITH_Eigen3=ON \
		-DCGAL_INSTALL_CMAKE_DIR="lib/cmake"
	make $jobArgs
}

INSTALL()
{
	cd build
	make install

	mkdir -p $(dirname $includeDir)
	mv $prefix/include $includeDir

	prepareInstalledDevelLibs libCGAL libCGAL_Core libCGAL_ImageIO \
		libCGAL_Qt5
	fixPkgconfig

	packageEntries devel \
		$developDir

	rm -rf $prefix/share
}
