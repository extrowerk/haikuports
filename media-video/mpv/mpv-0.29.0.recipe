SUMMARY="A free, open source, and cross-platform media player"
DESCRIPTION="mpv is a media player based on MPlayer and mplayer2. It supports \
a wide variety of video file formats, audio and video codecs, and subtitle \
types."
HOMEPAGE="https://mpv.io/"
COPYRIGHT="2013-2018 MPV Developers"
LICENSE="GNU GPL v2"
REVISION="1"
SOURCE_URI="https://github.com/mpv-player/mpv/archive/v$portVersion.tar.gz"
CHECKSUM_SHA256="772af878cee5495dcd342788a6d120b90c5b1e677e225c7198f1e76506427319"
SOURCE_FILENAME="mpv-$portVersion.tar.gz"
SOURCE_FILENAME_2="waf-2.0.9"
SOURCE_URI_2="https://gitlab.com/ita1024/waf/-/archive/$SOURCE_FILENAME_2/waf-$SOURCE_FILENAME_2.tar.gz"
CHECKSUM_SHA256_2="137b3a2be1e4412f36f9c8e4c33c6e390dd020ba6da27aa24dc4b00407f8ca98"
PATCHES="mpv-$portVersion.patchset"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

GLOBAL_WRITABLE_FILES="settings/mpv/encoding-profiles.conf keep-old"

commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
	commandSuffix=
	commandBinDir=$prefix/bin
fi

libVersion="1.101.0"
libVersionCompat="$libVersion compat >= ${libVersion%%.*}"

PROVIDES="
	mpv$secondaryArchSuffix = $portVersion
	cmd:mpv$commandSuffix
	lib:libmpv$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES="
	haiku$secondaryArchSuffix
#	lib:libarchive$secondaryArchSuffix
	lib:libass$secondaryArchSuffix
	lib:libavcodec$secondaryArchSuffix
	lib:libavdevice$secondaryArchSuffix
	lib:libavformat$secondaryArchSuffix
	lib:libavfilter$secondaryArchSuffix
	lib:libavutil$secondaryArchSuffix
	lib:libbluray$secondaryArchSuffix
	lib:libcaca$secondaryArchSuffix
	lib:libdvdnav$secondaryArchSuffix
	lib:libdvdread$secondaryArchSuffix
	lib:libgettextpo$secondaryArchSuffix
	lib:libiconv$secondaryArchSuffix
	lib:libjpeg$secondaryArchSuffix
	lib:liblcms2$secondaryArchSuffix
	lib:liblua$secondaryArchSuffix
#	lib:libopenal$secondaryArchSuffix
	lib:librubberband$secondaryArchSuffix
	lib:libSDL2_2.0$secondaryArchSuffix
	lib:libsmbclient$secondaryArchSuffix
	lib:libswresample$secondaryArchSuffix
	lib:libswscale$secondaryArchSuffix
	lib:libuchardet$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

PROVIDES_devel="
	mpv${secondaryArchSuffix}_devel = $portVersion
	devel:libmpv$secondaryArchSuffix = $libVersionCompat
	"
REQUIRES_devel="
	mpv$secondaryArchSuffix == $portVersion base
	"

BUILD_REQUIRES="
#	devel:libarchive$secondaryArchSuffix
	devel:libass$secondaryArchSuffix
	devel:libavcodec$secondaryArchSuffix
	devel:libavdevice$secondaryArchSuffix
	lib:libavdevice$secondaryArchSuffix # FFMPEG WORKAROUND
	devel:libavformat$secondaryArchSuffix
	devel:libavfilter$secondaryArchSuffix
	devel:libavutil$secondaryArchSuffix
	devel:libbluray$secondaryArchSuffix
	devel:libcaca$secondaryArchSuffix
	devel:libdvdcss$secondaryArchSuffix
	devel:libdvdnav$secondaryArchSuffix
	devel:libdvdread$secondaryArchSuffix
	devel:libenca$secondaryArchSuffix
	devel:libfontconfig$secondaryArchSuffix
	devel:libfreetype$secondaryArchSuffix
	devel:libfribidi$secondaryArchSuffix
	devel:libgettextlib$secondaryArchSuffix
	devel:libgl$secondaryArchSuffix
	devel:libglib_2.0$secondaryArchSuffix
	devel:libharfbuzz$secondaryArchSuffix
	devel:libiconv$secondaryArchSuffix
	devel:libjpeg$secondaryArchSuffix
	devel:liblcms2$secondaryArchSuffix
	devel:liblua$secondaryArchSuffix
	devel:libmpg123$secondaryArchSuffix
	devel:libmujs$secondaryArchSuffix
#	devel:libopenal$secondaryArchSuffix
	devel:librubberband$secondaryArchSuffix
	devel:libSDL2_2.0$secondaryArchSuffix
	devel:libsmbclient$secondaryArchSuffix
	devel:libswresample$secondaryArchSuffix
	devel:libswscale$secondaryArchSuffix
	devel:libuchardet$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	haiku${secondaryArchSuffix}_devel
	cmd:gcc$secondaryArchSuffix
	cmd:perl
	cmd:python
	cmd:pkg_config$secondaryArchSuffix
	cmd:rst2man.py
	cmd:yasm
	"

BUILD()
{
#	Do not call "python bootstrap.py" as it (only) downloads waf.
#	python bootstrap.py
	# Instead, copy the archive from SOURCE_URI_2.
	cd $sourceDir2/waf-$SOURCE_FILENAME_2
	./waf-light configure build
	cd $sourceDir
	cp $sourceDir2/waf-$SOURCE_FILENAME_2/waf waf
	chmod +x waf

	export LDFLAGS=-lnetwork
	waf configure \
		--enable-dvdread \
		--enable-dvdnav \
		--enable-libsmbclient \
		--enable-sdl2 \
		--enable-libmpv-shared \
		--disable-gl \
		--bindir=$binDir \
		--confdir=$settingsDir/mpv \
		--datadir=$dataDir \
		--libdir=$libDir \
		--includedir=$includeDir \
		--prefix=$prefix \
		--docdir=$docDir \
		--mandir=$manDir
#		--enable-openal \
#		--enable-libarchive \

	waf build
}

INSTALL()
{
	waf install
	rm -rf $dataDir/applications
	rm -rf $dataDir/icons

	prepareInstalledDevelLib libmpv
	fixPkgconfig

	packageEntries devel \
		$developDir
}
