SUMMARY="Open source continuation of Bungieâ€™s Marathon 2 game engine"
DESCRIPTION="Aleph One plays Marathon, Marathon 2, Marathon Infinity, and \
3rd-party content on a wide array of platforms, with (optional) OpenGL \
rendering, Internet play, Lua scripting, and more."
HOMEPAGE="https://alephone.lhowon.org/"
COPYRIGHT="1991-2001 Bungie Software
	2001-2018 Aleph One Developers"
LICENSE="GNU GPL v3"
REVISION="1"
SOURCE_URI="https://github.com/Aleph-One-Marathon/alephone/archive/release-20181006.tar.gz"
CHECKSUM_SHA256="2338035a797f07fc8d2cce78a6b27e888e6819b2bb1ac2ac9f9d796a7783c32a"
SOURCE_FILENAME="alephone-$portVersion.tar.gz"
SOURCE_DIR="alephone-release-20181006"
PATCHES="alephone-$portVersion.patchset"
ADDITIONAL_FILES="alephone.rdef.in"

ARCHITECTURES="!x86_gcc2 ?x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

# On x86_gcc2 we don't want to install the commands in bin/<arch>/, but in bin/.
commandSuffix=$secondaryArchSuffix
commandBinDir=$binDir
if [ "$targetArchitecture" = x86_gcc2 ]; then
    commandSuffix=
    commandBinDir=$prefix/bin
fi

PROVIDES="
	alephone$secondaryArchSuffix = $portVersion
	cmd:alephone$commandSuffix = $portVersion
	"
REQUIRES="
	haiku$secondaryArchSuffix
	lib:libavcodec$secondaryArchSuffix
	lib:libavformat$secondaryArchSuffix
	lib:libavutil$secondaryArchSuffix
	lib:libboost_filesystem$secondaryArchSuffix
	lib:libboost_system$secondaryArchSuffix
	lib:libcurl$secondaryArchSuffix
	lib:libexpat$secondaryArchSuffix
	lib:libGL$secondaryArchSuffix
	lib:libGLU$secondaryArchSuffix
	lib:libmad$secondaryArchSuffix
	lib:libpng16$secondaryArchSuffix
	lib:libSDL2_image_2.0$secondaryArchSuffix
	lib:libSDL2_net_2.0$secondaryArchSuffix
	lib:libSDL2_ttf_2.0$secondaryArchSuffix
	lib:libSDL2_2.0$secondaryArchSuffix
#	lib:libsmpeg$secondaryArchSuffix
	lib:libsndfile$secondaryArchSuffix
	lib:libspeex$secondaryArchSuffix
	lib:libspeexdsp$secondaryArchSuffix
	lib:libswscale$secondaryArchSuffix
	lib:libvorbisfile$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libavcodec$secondaryArchSuffix
	devel:libavformat$secondaryArchSuffix
	devel:libavutil$secondaryArchSuffix
	devel:libboost_filesystem$secondaryArchSuffix
	devel:libboost_system$secondaryArchSuffix
	devel:libcurl$secondaryArchSuffix
	devel:libexpat$secondaryArchSuffix
	devel:libGL$secondaryArchSuffix
	devel:libGLU$secondaryArchSuffix
	devel:libmad$secondaryArchSuffix
	devel:libpng16$secondaryArchSuffix
	devel:libSDL2_image_2.0$secondaryArchSuffix
	devel:libSDL2_net_2.0$secondaryArchSuffix
	devel:libSDL2_ttf_2.0$secondaryArchSuffix
	devel:libSDL2_2.0$secondaryArchSuffix
#	devel:libsmpeg$secondaryArchSuffix
	devel:libsndfile$secondaryArchSuffix
	devel:libspeex$secondaryArchSuffix
	devel:libspeexdsp$secondaryArchSuffix
	devel:libswscale$secondaryArchSuffix
	devel:libvorbisfile$secondaryArchSuffix
	devel:libz$secondaryArchSuffix
	devel:libzzip$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:aclocal
	cmd:autoconf
	cmd:autoheader
	cmd:automake
	cmd:awk
	cmd:gcc$secondaryArchSuffix
	cmd:install
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:pkg_config$secondaryArchSuffix
	"

defineDebugInfoPackage alephone$secondaryArchSuffix \
	"$commandBinDir"/alephone

BUILD()
{
	export LDFLAGS="-lnetwork"

	runConfigure --omit-dirs binDir ./autogen.sh \
		--with-boost-libdir=`finddir B_SYSTEM_LIB_DIRECTORY` \
		--bindir=$commandBinDir

	make $jobArgs
}

INSTALL()
{
	make install

	# Add Haiku resources
	local APP_SIGNATURE="application/x-vnd.org.bungie.source.AlephOne"
	local MAJOR="`echo "$portVersion" | cut -d. -f1`"
	local MIDDLE="`echo "$portVersion" | cut -d. -f2`"
	local MINOR="`echo "$portVersion" | cut -d. -f3`"
	local LONG_INFO="$SUMMARY"

	sed \
		-e "s|@APP_SIGNATURE@|$APP_SIGNATURE|" \
		-e "s|@MAJOR@|$MAJOR|" \
		-e "s|@MIDDLE@|$MIDDLE|" \
		-e "s|@MINOR@|$MINOR|" \
		-e "s|@LONG_INFO@|$LONG_INFO|" \
		$portDir/additional-files/alephone.rdef.in \
			> alephone.rdef

	addResourcesToBinaries alephone.rdef "$commandBinDir"/alephone
}

TEST()
{
	make check
}
