From 1931ae3177e8ac0a6b02682a73459cfdfd3ebc7c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20Mizsei?= <zmizsei@extrowerk.com>
Date: Tue, 16 Jul 2019 18:08:46 +0200
Subject: Probably broken Haiku support


diff --git a/src/getExecutablePath.cpp b/src/getExecutablePath.cpp
index e2e759d..0e13868 100644
--- a/src/getExecutablePath.cpp
+++ b/src/getExecutablePath.cpp
@@ -134,6 +134,24 @@ std::string getExecutablePath()
     return ec ? "" : p.make_preferred().string();
 }
 
+#elif(BOOST_OS_HAIKU)
+/* #FIXME */
+std::string getExecutablePath()
+{
+    std::string ret = "";
+    if(ret.empty())
+        return "";
+    bfs::path p(ret);
+    if(!p.has_root_directory())
+    {
+        boost::system::error_code ec;
+        using bfs::canonical;
+        p = canonical(p, ec);
+        ret = (ec) ? "" : p.make_preferred().string();
+    }
+    return ret;
+}
+
 #else
 
 #error Unsupported plattform!
-- 
2.21.0


From be655693f3c0762ac25776559232052fd02cc958 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20Mizsei?= <zmizsei@extrowerk.com>
Date: Sat, 20 Jul 2019 23:41:31 +0200
Subject: Do not set locale on Haiku


diff --git a/src/LocaleHelper.cpp b/src/LocaleHelper.cpp
index 3578511..1dda0da 100644
--- a/src/LocaleHelper.cpp
+++ b/src/LocaleHelper.cpp
@@ -64,6 +64,12 @@ std::locale createUtf8Locale()
     // Don't change the locale on OSX. Using "" fails with 'locale::facet::_S_create_c_locale name not valid'
     return LocaleHelper::getBfsDefaultLocale();
 }
+#elif BOOST_OS_HAIKU
+std::locale createUtf8Locale()
+{
+    // Don't change the locale on Haiku. Using "" fails with 'locale::facet::_S_create_c_locale name not valid'
+    return LocaleHelper::getBfsDefaultLocale();
+}
 #else
 std::locale createUtf8Locale()
 {
-- 
2.21.0


From fc9f5a19f200e6b1b9af6a3b73892402dc8f6716 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20Mizsei?= <zmizsei@extrowerk.com>
Date: Sun, 21 Jul 2019 10:20:15 +0200
Subject: ExecutablePath workaround


diff --git a/src/getExecutablePath.cpp b/src/getExecutablePath.cpp
index 0e13868..21ef6fa 100644
--- a/src/getExecutablePath.cpp
+++ b/src/getExecutablePath.cpp
@@ -138,7 +138,7 @@ std::string getExecutablePath()
 /* #FIXME */
 std::string getExecutablePath()
 {
-    std::string ret = "";
+    std::string ret = "/boot/system/apps/RTTR/s25client";
     if(ret.empty())
         return "";
     bfs::path p(ret);
-- 
2.21.0

