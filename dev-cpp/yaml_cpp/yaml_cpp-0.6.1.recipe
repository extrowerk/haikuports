SUMMARY="A YAML parser and emitter in C++"
DESCRIPTION="yaml-cpp is a YAML parser and emitter in C++ matching the YAML \
1.2 spec."
HOMEPAGE="https://github.com/jbeder/yaml-cpp/"
COPYRIGHT="2018 Jesse Beder"
LICENSE="MIT"
REVISION="1"
SOURCE_URI="https://github.com/jbeder/yaml-cpp/archive/yaml-cpp-$portVersion.tar.gz"
CHECKSUM_SHA256="25ec37e6d82ab8c485926d69a5567741c7263515f8631e5dcb3fb4708e6b0d0d"
SOURCE_DIR="yaml-cpp-yaml-cpp-$portVersion"

ARCHITECTURES="!x86_gcc2 x86 x86_64"
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	yaml_cpp$secondaryArchSuffix = $portVersion compat >= 0.6
	lib:libyaml_cpp$secondaryArchSuffix = $portVersion compat >= 0.6
	lib:libgmock$secondaryArchSuffix
	lib:libgmock_main$secondaryArchSuffix
	lib:libgtest$secondaryArchSuffix
	lib:libgtest_main$secondaryArchSuffix
	"
REQUIRES="
	haiku$secondaryArchSuffix
	"

PROVIDES_devel="
	yaml_cpp${secondaryArchSuffix}_devel = $portVersion compat >= 0.6
	devel:libyaml_cpp$secondaryArchSuffix = $portVersion compat >= 0.6
	devel:libgmock$secondaryArchSuffix
	devel:libgmock_main$secondaryArchSuffix
	devel:libgtest$secondaryArchSuffix
	devel:libgtest_main$secondaryArchSuffix
	"
REQUIRES_devel="
	yaml_cpp$secondaryArchSuffix == $portVersion
	devel:libboost_system$secondaryArchSuffix
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	devel:libboost_system$secondaryArchSuffix
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:make
	cmd:gcc${secondaryArchSuffix}
	cmd:ld${secondaryArchSuffix}
	"

BUILD()
{
	cmake -DBUILD_SHARED_LIBS=ON -DYAML_CPP_BUILD_TOOLS=OFF \
		-DCMAKE_INSTALL_PREFIX:PATH=$prefix .
	make $jobArgs
}

INSTALL()
{
	make install

	mkdir -p `dirname $includeDir` $libDir
	mv $prefix/include $includeDir

	if [ -n "$secondaryArchSuffix" ]; then
		mv $prefix/lib/libyaml-cpp* $prefix/lib/pkgconfig $libDir/
	fi

	prepareInstalledDevelLibs \
		libyaml-cpp libgmock libgmock_main libgtest libgtest_main
	fixPkgconfig

	packageEntries devel \
		$developDir
}

TEST()
{
	# tests make the build considerably longer
	# TODO: fail with: The current thread is not holding the mutex @0xf96b94
	# probably because gtest is not ported (also it uses bundled one)
	cmake -DBUILD_SHARED_LIBS=ON -DYAML_CPP_BUILD_TOOLS=ON \
		-DCMAKE_INSTALL_PREFIX:PATH=$prefix .
	make $jobArgs
	cd test
	./run-tests
}
