From 9d09dd4c7b3225bf1c8c32eeb4df029a2e6de144 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20Mizsei?= <zmizsei@extrowerk.com>
Date: Sun, 5 May 2019 15:35:20 +0200
Subject: Test fix for Haiku


diff --git a/test/fiddle/helper.rb b/test/fiddle/helper.rb
index 73f6f78..ba51c22 100644
--- a/test/fiddle/helper.rb
+++ b/test/fiddle/helper.rb
@@ -99,6 +99,18 @@ when /aix/
       end
     end
   end
+when /haiku/
+  libdir = '/system/lib'
+  case [0].pack('L!').size
+  when 4
+    # 32-bit ruby
+    libdir = '/system/lib/x86' if File.directory? '/system/lib/x86'
+  when 8
+    # 64-bit ruby
+    libdir = '/system/lib/' if File.directory? '/system/lib/'
+  end
+  libc_so = File.join(libdir, "libroot.so")
+  libm_so = File.join(libdir, "libroot.so")
 else
   libc_so = ARGV[0] if ARGV[0] && ARGV[0][0] == ?/
   libm_so = ARGV[1] if ARGV[1] && ARGV[1][0] == ?/
-- 
2.28.0


From af8e4ec3c3eaa0461b2679b935fb90a9057b54df Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Zolt=C3=A1n=20Mizsei?= <zmizsei@extrowerk.com>
Date: Wed, 25 Dec 2019 19:53:24 +0100
Subject: Add Haiku to the context support list


diff --git a/configure.ac b/configure.ac
index 6766df2..ca10de2 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2346,6 +2346,9 @@ AS_CASE([$rb_cv_coroutine], [yes|''], [
         [*-openbsd*], [
             rb_cv_coroutine=copy
         ],
+        [*-haiku*], [
+            rb_cv_coroutine=copy
+        ],
         [*], [
             rb_cv_coroutine=ucontext
         ]
-- 
2.28.0


From 2a95629b1dffa49eff111d6ba82c10f906961101 Mon Sep 17 00:00:00 2001
From: Gerasim Troeglazov <3dEyes@gmail.com>
Date: Mon, 8 Jun 2020 19:42:51 +1000
Subject: Disable stack-protector


diff --git a/configure.ac b/configure.ac
index ca10de2..b13de6c 100644
--- a/configure.ac
+++ b/configure.ac
@@ -587,7 +587,7 @@ AS_IF([test "$GCC" = yes], [
 
     # -fstack-protector
     AS_CASE(["$target_os"],
-    [mingw*], [
+    [mingw*|haiku*], [
 	stack_protector=no
     ])
     AS_IF([test -z "${stack_protector+set}"], [
-- 
2.28.0


From 5c3e04837a1db517a4e6d0cc71189db224532626 Mon Sep 17 00:00:00 2001
From: Nobuyoshi Nakada <nobu@ruby-lang.org>
Date: Fri, 25 Dec 2020 07:53:59 +0100
Subject: Ignore failure on unsupported fcntl to drop non-blocking mode


diff --git a/ruby.c b/ruby.c
index 96d8f75..c283912 100644
--- a/ruby.c
+++ b/ruby.c
@@ -2086,6 +2086,26 @@ load_file_internal(VALUE argp_v)
     return (VALUE)ast;
 }
 
+/* disabling O_NONBLOCK, and returns 0 on success, otherwise errno */
+static inline int
+disable_nonblock(int fd)
+{
+#if defined(HAVE_FCNTL) && defined(F_SETFL)
+    if (fcntl(fd, F_SETFL, 0) < 0) {
+        int e = errno;
+        ASSUME(e != 0);
+# if defined ENOTSUP
+        if (e == ENOTSUP) return 0;
+# endif
+# if defined B_UNSUPPORTED
+        if (e == B_UNSUPPORTED) return 0;
+# endif
+        return e;
+    }
+#endif
+    return 0;
+}
+
 static VALUE
 open_load_file(VALUE fname_v, int *xflag)
 {
@@ -2137,8 +2157,7 @@ open_load_file(VALUE fname_v, int *xflag)
 
 #if defined HAVE_FCNTL && MODE_TO_LOAD != O_RDONLY
 	/* disabling O_NONBLOCK */
-	if (fcntl(fd, F_SETFL, 0) < 0) {
-	    e = errno;
+	if (MODE_TO_LOAD != O_RDONLY && (e = disable_nonblock(fd)) != 0) {
 	    (void)close(fd);
 	    rb_load_fail(fname_v, strerror(e));
 	}
-- 
2.28.0

